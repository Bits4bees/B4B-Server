version: 0.2
phases: 
  install:
    runtime-versions:
        docker: 18     
    commands: 
      - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2&
      - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build: 
    commands: 
    - echo Logging in to Amazon ECR.... 
    - aws --version
    # update the following line with your own region
    - $(aws ecr get-login --no-include-email --region us-east-2)

    - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
    - IMAGE_TAG=${COMMIT_HASH:=latest}
    - REPOSITORY_URI=363359022847.dkr.ecr.us-east-2.amazonaws.com/dashboard
  build: 
    commands: 
    - echo docker-compose version
    - docker-compose --version
    - echo Build started on `date` 
    - echo Building the Docker image... 
    # update  the following line with the name of your own ECR repository
    #- docker-compose -f ./services/docker_compose_production.yml build

    #View available images
    - echo ----AVAILABLE IMAGES----
    - aws ecr list-images --repository-name "dashboard"  --region us-east-2
    # update the following line with the URI of your own ECR repository (view the Push Commands in the console)
    
    #ESTE ES EL BUENO
    #- docker build . -t dashboard:latest -f ./app/dockerfile

    #- docker tag emqx $REPOSITORY_URI/eqmx:latest
    #- docker tag mongo $REPOSITORY_URI/mongo:latest
    #- docker tag $REPOSITORY_URI $REPOSITORY_URI 

    #ESTE ES EL BUENO
    #- docker tag dashboard:latest $REPOSITORY_URI:latest
  post_build: 
    commands: 
    - echo Build completed on `date` 
    - echo pushing to repo
    # update the following line with the URI of your own ECR repository
    #- docker push $REPOSITORY_URI:latest
    #- docker push $REPOSITORY_URI:$IMAGE_TAG
    #- docker push $REPOSITORY_URI

    # SIRVE!
    #- docker push $REPOSITORY_URI:latest
    #- echo Writing image definitions file... 

    #- printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - '**/*'